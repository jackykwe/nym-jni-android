plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
//    id 'org.jetbrains.kotlin.jvm' version '1.8.0'  // for JSON serialisation
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'  // for JSON serialisation
}

android {
    namespace 'com.kaeonx.nymandroidport'
    compileSdk 33

    defaultConfig {
        minSdk 31
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation 'androidx.work:work-multiprocess:2.7.1'  // for RemoteCoroutineWorker

    // For permissions
    implementation 'com.google.accompanist:accompanist-permissions:0.28.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Jetpack Compose
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom
//    // Material Design 3: No reason not to use; we're building for Android 12 and above anyway
    implementation 'androidx.compose.material3:material3'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    // includes extension functions like LiveData::asFlow()
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.5.3'

    // WorkManager
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // Room
    implementation 'androidx.room:room-runtime:2.5.0'
    annotationProcessor 'androidx.room:room-compiler:2.5.0'
    // To use Kotlin annotation processing tool (kapt)
    kapt 'androidx.room:room-compiler:2.5.0'
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation 'androidx.room:room-ktx:2.5.0'
//    // optional - Paging 3 Integration
//    implementation 'androidx.room:room-paging:2.4.3'

    // WebSocket
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'

    // JSON Serialisation
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
}