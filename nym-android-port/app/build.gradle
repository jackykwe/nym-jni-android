plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
//    id 'org.jetbrains.kotlin.jvm' version '1.8.0'  // for JSON serialisation
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.0'  // for JSON serialisation
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }
    namespace 'com.kaeonx.nymandroidport'
    compileSdk 33
//    ndkVersion '25.1.8937393'  // This is how the NDK is detected

    defaultConfig {
        applicationId 'com.kaeonx.nymandroidport'
        minSdk 21
        // Why 31 is chosen: https://developer.android.com/google/play/requirements/target-sdk
        // Why 21 is chosen: minimum SDK for Compose framework
        targetSdk 33
        versionCode 1
        versionName '1.0'

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        signingConfig signingConfigs.release
    }

    buildTypes {
        release {
            debuggable true

            // Enables code shrinking, obfuscation, and optimization for only
            // your project's release build type.
            minifyEnabled true

            // Enables resource shrinking, which is performed by the
            // Android Gradle plugin.
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = '1.3.2'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.activity:activity-compose:1.6.1'

    // For permissions
    implementation 'com.google.accompanist:accompanist-permissions:0.28.0'

    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'androidx.test:rules:1.5.0'

    // Jetpack Compose
    def composeBom = platform('androidx.compose:compose-bom:2022.10.00')
    implementation composeBom
    androidTestImplementation composeBom
//    // Material Design 3: No reason not to use; we're building for Android 12 and above anyway
    implementation 'androidx.compose.material3:material3'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.1'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.1'
    // includes extension functions like LiveData::asFlow()
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'

    // Navigation
    implementation 'androidx.navigation:navigation-compose:2.5.3'

    // Room
    implementation 'androidx.room:room-runtime:2.5.0'
    annotationProcessor 'androidx.room:room-compiler:2.5.0'
    // To use Kotlin annotation processing tool (kapt)
    kapt 'androidx.room:room-compiler:2.5.0'
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation 'androidx.room:room-ktx:2.5.0'
//    // optional - Paging 3 Integration
//    implementation 'androidx.room:room-paging:2.4.3'

    // WebSocket
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'

    // JSON Serialisation
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.1'
}

//task beforeAppBuild(type: Exec) {
//    workingDir '../'
//    commandLine './beforeAppBuild.sh'
//}
//
//afterEvaluate {
//    tasks.named('preBuild') {
//        it.dependsOn 'beforeAppBuild'
//    }
//}